// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using _3AccessData;

namespace _3AccessData.Migrations
{
    [DbContext(typeof(GStoreDB))]
    [Migration("20231106225642_migracion1")]
    partial class migracion1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("_2Domain.Entities.Carrito", b =>
                {
                    b.Property<int>("carritoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal>("total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("usuarioId")
                        .HasColumnType("int");

                    b.HasKey("carritoId");

                    b.HasIndex("usuarioId")
                        .IsUnique();

                    b.ToTable("Carritos");

                    b.HasData(
                        new
                        {
                            carritoId = 1,
                            total = 1650m,
                            usuarioId = 1
                        },
                        new
                        {
                            carritoId = 2,
                            total = 1750m,
                            usuarioId = 2
                        });
                });

            modelBuilder.Entity("_2Domain.Entities.CarritoJuego", b =>
                {
                    b.Property<int>("carritoJuegoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.Property<int>("carritoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("fecha")
                        .HasColumnType("DateTime");

                    b.Property<int>("juegoId")
                        .HasColumnType("int");

                    b.HasKey("carritoJuegoId");

                    b.HasIndex("carritoId");

                    b.HasIndex("juegoId");

                    b.ToTable("CarritoJuegos");
                });

            modelBuilder.Entity("_2Domain.Entities.Categoria", b =>
                {
                    b.Property<int>("categoriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("tipo")
                        .HasColumnType("varchar(15)");

                    b.HasKey("categoriaId");

                    b.ToTable("Categorias");

                    b.HasData(
                        new
                        {
                            categoriaId = 1,
                            tipo = "RPG"
                        },
                        new
                        {
                            categoriaId = 2,
                            tipo = "FPS"
                        },
                        new
                        {
                            categoriaId = 3,
                            tipo = "Terror"
                        },
                        new
                        {
                            categoriaId = 4,
                            tipo = "Pelea"
                        },
                        new
                        {
                            categoriaId = 5,
                            tipo = "Accion"
                        },
                        new
                        {
                            categoriaId = 6,
                            tipo = "Fantasia"
                        });
                });

            modelBuilder.Entity("_2Domain.Entities.CategoriaJuego", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<int>("JuegoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("JuegoId");

                    b.ToTable("CategoriaJuegos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoriaId = 1,
                            JuegoId = 2
                        },
                        new
                        {
                            Id = 2,
                            CategoriaId = 5,
                            JuegoId = 1
                        },
                        new
                        {
                            Id = 3,
                            CategoriaId = 6,
                            JuegoId = 1
                        });
                });

            modelBuilder.Entity("_2Domain.Entities.Juego", b =>
                {
                    b.Property<int>("juegoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("varchar(2000)");

                    b.Property<string>("imagen")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("varchar(40)");

                    b.Property<decimal>("precio")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("juegoId");

                    b.ToTable("Juegos");

                    b.HasData(
                        new
                        {
                            juegoId = 1,
                            descripcion = "PlayStation",
                            imagen = "https://kalimagames.com/wp-content/uploads/2022/06/god-of-war-cover-ps4.jpg",
                            nombre = "God of War",
                            precio = 9000m
                        },
                        new
                        {
                            juegoId = 2,
                            descripcion = "PlayStation",
                            imagen = "https://d3ugyf2ht6aenh.cloudfront.net/stores/001/054/804/products/final-fantasy-xv-1pre1-1d968ea8634df9059016615194247849-1024-1024.jpg",
                            nombre = "Final Fantasy XV",
                            precio = 10000m
                        },
                        new
                        {
                            juegoId = 3,
                            descripcion = "PlayStation",
                            imagen = "https://media.vandal.net/m/31670/nier-automata-201739151954_1.jpg",
                            nombre = "Nier Automata",
                            precio = 12000m
                        },
                        new
                        {
                            juegoId = 4,
                            descripcion = "PlayStation",
                            imagen = "https://media.vandal.net/m/68948/granblue-fantasy-versus-20202281558476_1.jpg",
                            nombre = "Grand Blue Fantasy VS",
                            precio = 80000m
                        },
                        new
                        {
                            juegoId = 5,
                            descripcion = "PlayStation",
                            imagen = "https://img.asmedia.epimg.net/resizer/nLnnwOnepXsO4SxQi5clD-OMDU4=/1472x0/cloudfront-eu-central-1.images.arcpublishing.com/diarioas/UXT2MHW3GZIZVICCIMPIDDZEBQ.jpg",
                            nombre = "Uncharted 4",
                            precio = 8000m
                        },
                        new
                        {
                            juegoId = 6,
                            descripcion = "PlayStation",
                            imagen = "https://uvejuegos.com/img/caratulas/59884/ghostps4.jpg",
                            nombre = "Ghost of Tsushima",
                            precio = 8000m
                        },
                        new
                        {
                            juegoId = 7,
                            descripcion = "PlayStation",
                            imagen = "https://uvejuegos.com/img/caratulas/61273/control_ps4.jpg",
                            nombre = "Control",
                            precio = 8000m
                        },
                        new
                        {
                            juegoId = 8,
                            descripcion = "PlayStation",
                            imagen = "https://uvejuegos.com/img/caratulas/56484/ps4.jpg",
                            nombre = "Resident Evil 4",
                            precio = 8000m
                        },
                        new
                        {
                            juegoId = 9,
                            descripcion = "PlayStation",
                            imagen = "https://cybergamesemanuel.com/wp-content/uploads/2020/04/Resident-evil-3-2.jpg",
                            nombre = "Resident Evil 3",
                            precio = 8000m
                        },
                        new
                        {
                            juegoId = 10,
                            descripcion = "PlayStation",
                            imagen = "https://uvejuegos.com/img/caratulas/61051/Battlefield-V-PS4.jpg",
                            nombre = "Battlefield V",
                            precio = 8000m
                        });
                });

            modelBuilder.Entity("_2Domain.Entities.Usuario", b =>
                {
                    b.Property<int>("usuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("apellido")
                        .IsRequired()
                        .HasColumnType("varchar(15)");

                    b.Property<string>("dni")
                        .IsRequired()
                        .HasColumnType("varchar(15)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("varchar(40)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("varchar(15)");

                    b.HasKey("usuarioId");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            usuarioId = 1,
                            apellido = "Martinez",
                            dni = "30456789",
                            email = "email@falso.com",
                            nombre = "Diego"
                        },
                        new
                        {
                            usuarioId = 2,
                            apellido = "Martinez",
                            dni = "30458889",
                            email = "email@falso.com",
                            nombre = "Alberto"
                        },
                        new
                        {
                            usuarioId = 3,
                            apellido = "Rodriguez",
                            dni = "30457999",
                            email = "email@falso.com",
                            nombre = "Julio"
                        },
                        new
                        {
                            usuarioId = 4,
                            apellido = "Bros",
                            dni = "30321789",
                            email = "email@falso.com",
                            nombre = "Mario"
                        });
                });

            modelBuilder.Entity("_2Domain.Entities.Carrito", b =>
                {
                    b.HasOne("_2Domain.Entities.Usuario", "usuario")
                        .WithOne("carrito")
                        .HasForeignKey("_2Domain.Entities.Carrito", "usuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("_2Domain.Entities.CarritoJuego", b =>
                {
                    b.HasOne("_2Domain.Entities.Carrito", "carrito")
                        .WithMany("carritoJuego")
                        .HasForeignKey("carritoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_2Domain.Entities.Juego", "juego")
                        .WithMany("carritoJuego")
                        .HasForeignKey("juegoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("carrito");

                    b.Navigation("juego");
                });

            modelBuilder.Entity("_2Domain.Entities.CategoriaJuego", b =>
                {
                    b.HasOne("_2Domain.Entities.Categoria", "Categoria")
                        .WithMany("categoriaJuego")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_2Domain.Entities.Juego", "Juego")
                        .WithMany("categoriaJuego")
                        .HasForeignKey("JuegoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Juego");
                });

            modelBuilder.Entity("_2Domain.Entities.Carrito", b =>
                {
                    b.Navigation("carritoJuego");
                });

            modelBuilder.Entity("_2Domain.Entities.Categoria", b =>
                {
                    b.Navigation("categoriaJuego");
                });

            modelBuilder.Entity("_2Domain.Entities.Juego", b =>
                {
                    b.Navigation("carritoJuego");

                    b.Navigation("categoriaJuego");
                });

            modelBuilder.Entity("_2Domain.Entities.Usuario", b =>
                {
                    b.Navigation("carrito");
                });
#pragma warning restore 612, 618
        }
    }
}
